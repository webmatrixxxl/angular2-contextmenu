System.registerDynamic("angular2-contextmenu/src/contextMenu.options",["@angular/core"],!0,function($__require,exports,module){"use strict";var core_1=$__require("@angular/core");return exports.CONTEXT_MENU_OPTIONS=new core_1.OpaqueToken("CONTEXT_MENU_OPTIONS"),module.exports}),System.registerDynamic("angular2-contextmenu/src/contextMenu.component",["./contextMenu.item.directive","./contextMenu.options","./contextMenu.service","@angular/core"],!0,function($__require,exports,module){"use strict";var contextMenu_item_directive_1=$__require("./contextMenu.item.directive"),contextMenu_options_1=$__require("./contextMenu.options"),contextMenu_service_1=$__require("./contextMenu.service"),core_1=$__require("@angular/core"),ContextMenuComponent=function(){function ContextMenuComponent(_contextMenuService,changeDetector,elementRef,options){var _this=this;this._contextMenuService=_contextMenuService,this.changeDetector=changeDetector,this.elementRef=elementRef,this.options=options,this.useBootstrap4=!1,this.close=new core_1.EventEmitter,this.visibleMenuItems=[],this.links=[],this.isShown=!1,this.isOpening=!1,this.mouseLocation={left:"0px",top:"0px"},options&&(this.useBootstrap4=options.useBootstrap4),_contextMenuService.show.subscribe(function(menuEvent){return _this.onMenuEvent(menuEvent)})}return ContextMenuComponent.prototype.stopEvent=function($event){$event.stopPropagation()},Object.defineProperty(ContextMenuComponent.prototype,"locationCss",{get:function(){return{position:"fixed",display:this.isShown?"block":"none",left:this.mouseLocation.left,marginLeft:this.mouseLocation.marginLeft,marginTop:this.mouseLocation.marginTop,top:this.mouseLocation.top}},enumerable:!0,configurable:!0}),ContextMenuComponent.prototype.clickedOutside=function(){this.isOpening||this.hideMenu()},ContextMenuComponent.prototype.ngAfterContentInit=function(){var _this=this;this.menuItems.forEach(function(menuItem){menuItem.execute.subscribe(function(){return _this.hideMenu()})})},ContextMenuComponent.prototype.isMenuItemEnabled=function(menuItem){return this.evaluateIfFunction(menuItem.enabled)},ContextMenuComponent.prototype.isMenuItemVisible=function(menuItem){return this.evaluateIfFunction(menuItem.visible)},ContextMenuComponent.prototype.evaluateIfFunction=function(value){return value instanceof Function?value(this.item):value},ContextMenuComponent.prototype.isDisabled=function(link){return link.enabled&&!link.enabled(this.item)},ContextMenuComponent.prototype.execute=function(link,$event){this.isDisabled(link)||(this.hideMenu(),link.click(this.item,$event))},ContextMenuComponent.prototype.onMenuEvent=function(menuEvent){var _this=this,actions=menuEvent.actions,contextMenu=menuEvent.contextMenu,event=menuEvent.event,item=menuEvent.item;if(contextMenu&&contextMenu!==this)return void this.hideMenu();this.isOpening=!0,setTimeout(function(){return _this.isOpening=!1},400),actions&&console&&console.warn&&console.warn("actions configuration object is deprecated and will be removed in version 1.x.\n        See https://github.com/isaacplmann/angular2-contextmenu for the new declarative syntax."),actions&&actions.length>0?(this.setVisibleMenuItems(),this.showMenu()):this.menuItems?setTimeout(function(){_this.setVisibleMenuItems(),_this.visibleMenuItems.length>0?_this.showMenu():_this.hideMenu(),setTimeout(function(){var menuWidth=_this.menuElement?_this.menuElement.nativeElement.clientWidth:100,menuHeight=_this.menuElement?_this.menuElement.nativeElement.clientHeight:100,bodyWidth=event.view.document.body.clientWidth,bodyHeight=event.view.document.body.clientHeight,distanceFromRight=bodyWidth-(event.clientX+menuWidth),distanceFromBottom=bodyHeight-(event.clientY+menuHeight),isMenuOutsideBody=!1;distanceFromRight<0&&event.clientX>bodyWidth/2&&(_this.mouseLocation.marginLeft="-"+menuWidth+"px",isMenuOutsideBody=!0),distanceFromBottom<0&&event.clientY>bodyHeight/2&&(_this.mouseLocation.marginTop="-"+menuHeight+"px",isMenuOutsideBody=!0),isMenuOutsideBody&&_this.showMenu()})}):this.hideMenu(),this.links=actions,this.item=item;var adjustX=0,adjustY=0,offsetParent=this.elementRef.nativeElement.offsetParent;if(offsetParent&&"BODY"!==offsetParent.tagName){var position=event.view.getComputedStyle(offsetParent).position;if("absolute"!==position&&"fixed"!==position&&"fixed"!==this.locationCss.position){var _a=offsetParent.getBoundingClientRect(),left=_a.left,top_1=_a.top;adjustX=-left,adjustY=-top_1}}this.mouseLocation={left:event.clientX+adjustX+"px",top:event.clientY+adjustY+"px"}},ContextMenuComponent.prototype.setVisibleMenuItems=function(){var _this=this;this.visibleMenuItems=this.menuItems.filter(function(menuItem){return _this.isMenuItemVisible(menuItem)})},ContextMenuComponent.prototype.showMenu=function(){this.isShown=!0,this.changeDetector.markForCheck()},ContextMenuComponent.prototype.hideMenu=function(event){event&&(event.keyCode&&27!==event.keyCode||event.key&&"Escape"!==event.key)||(!0===this.isShown&&this.close.emit({}),this.isShown=!1,this.changeDetector.markForCheck())},ContextMenuComponent.decorators=[{type:core_1.Component,args:[{selector:"context-menu",styles:[".passive {\n       display: block;\n       padding: 3px 20px;\n       clear: both;\n       font-weight: normal;\n       line-height: @line-height-base;\n       white-space: nowrap;\n     }"],template:'<div class="dropdown angular2-contextmenu">\n      <ul *ngIf="item" #menu [ngStyle]="locationCss" class="dropdown-menu">\n        \x3c!-- Imperative context menu --\x3e\n        <li *ngFor="let link of links" [class.disabled]="isDisabled(link)">\n          <a href [class.dropdown-item]="useBootstrap4" [class.disabled]="useBootstrap4 && isDisabled(link)"\n            (click)="execute(link, $event); $event.preventDefault();"\n            innerHTML="{{link.html ? link.html(item) : \'\'}}"></a>\n        </li>\n        \x3c!-- Declarative context menu --\x3e\n        <li *ngFor="let menuItem of visibleMenuItems" [class.disabled]="!isMenuItemEnabled(menuItem)"\n            [class.divider]="menuItem.divider" [class.dropdown-divider]="useBootstrap4 && menuItem.divider"\n            [attr.role]="menuItem.divider ? \'separator\' : undefined">\n          <div *ngIf="!menuItem.divider && !menuItem.passive" href [class.dropdown-item]="useBootstrap4"\n            [class.disabled]="useBootstrap4 && !isMenuItemEnabled(menuItem)"\n            (click)="menuItem.triggerExecute(item, $event); $event.preventDefault();">\n            <template [ngTemplateOutlet]="menuItem.template" [ngOutletContext]="{ $implicit: item }"></template>\n          </div>\n\n          <span (click)="stopEvent($event)" (contextmenu)="stopEvent($event)" class="passive"\n                *ngIf="!menuItem.divider && menuItem.passive" [class.dropdown-item]="useBootstrap4"\n                [class.disabled]="useBootstrap4 && !isMenuItemEnabled(menuItem)">\n            <template [ngTemplateOutlet]="menuItem.template" [ngOutletContext]="{ $implicit: item }"></template>\n          </span>\n        </li>\n      </ul>\n    </div>\n  '}]}],ContextMenuComponent.ctorParameters=function(){return[{type:contextMenu_service_1.ContextMenuService},{type:core_1.ChangeDetectorRef},{type:core_1.ElementRef},{type:void 0,decorators:[{type:core_1.Optional},{type:core_1.Inject,args:[contextMenu_options_1.CONTEXT_MENU_OPTIONS]}]}]},ContextMenuComponent.propDecorators={useBootstrap4:[{type:core_1.Input}],close:[{type:core_1.Output}],menuItems:[{type:core_1.ContentChildren,args:[contextMenu_item_directive_1.ContextMenuItemDirective]}],menuElement:[{type:core_1.ViewChild,args:["menu"]}],clickedOutside:[{type:core_1.HostListener,args:["document:click"]},{type:core_1.HostListener,args:["document:contextmenu"]}],hideMenu:[{type:core_1.HostListener,args:["window:scroll"]},{type:core_1.HostListener,args:["document:keydown",["$event"]]}]},ContextMenuComponent}();return exports.ContextMenuComponent=ContextMenuComponent,module.exports}),System.registerDynamic("angular2-contextmenu/src/contextMenu.item.directive",["@angular/core"],!0,function($__require,exports,module){"use strict";var core_1=$__require("@angular/core"),ContextMenuItemDirective=function(){function ContextMenuItemDirective(template){this.template=template,this.divider=!1,this.passive=!1,this.enabled=!0,this.visible=!0,this.execute=new core_1.EventEmitter}return ContextMenuItemDirective.prototype.evaluateIfFunction=function(value,item){return value instanceof Function?value(item):value},ContextMenuItemDirective.prototype.triggerExecute=function(item,$event){this.evaluateIfFunction(this.enabled,item)&&this.execute.emit({event:$event,item:item})},ContextMenuItemDirective.decorators=[{type:core_1.Directive,args:[{selector:"template[contextMenuItem]"}]}],ContextMenuItemDirective.ctorParameters=function(){return[{type:core_1.TemplateRef}]},ContextMenuItemDirective.propDecorators={divider:[{type:core_1.Input}],passive:[{type:core_1.Input}],enabled:[{type:core_1.Input}],visible:[{type:core_1.Input}],execute:[{type:core_1.Output}]},ContextMenuItemDirective}();return exports.ContextMenuItemDirective=ContextMenuItemDirective,module.exports}),System.registerDynamic("angular2-contextmenu/src/contextMenu.service",["@angular/core","rxjs/Rx"],!0,function($__require,exports,module){"use strict";var core_1=$__require("@angular/core"),Rx_1=$__require("rxjs/Rx"),ContextMenuService=function(){function ContextMenuService(){this.show=new Rx_1.Subject}return ContextMenuService.decorators=[{type:core_1.Injectable}],ContextMenuService.ctorParameters=function(){return[]},ContextMenuService}();return exports.ContextMenuService=ContextMenuService,module.exports}),System.registerDynamic("angular2-contextmenu/src/contextMenu.attach.directive",["./contextMenu.service","@angular/core"],!0,function($__require,exports,module){"use strict";var contextMenu_service_1=$__require("./contextMenu.service"),core_1=$__require("@angular/core"),ContextMenuAttachDirective=function(){function ContextMenuAttachDirective(contextMenuService){this.contextMenuService=contextMenuService}return ContextMenuAttachDirective.prototype.onContextMenu=function(event){this.contextMenuService.show.next({contextMenu:this.contextMenu,event:event,item:this.contextMenuSubject}),event.preventDefault(),event.stopPropagation()},ContextMenuAttachDirective.decorators=[{type:core_1.Directive,args:[{selector:"[contextMenu]"}]}],ContextMenuAttachDirective.ctorParameters=function(){return[{type:contextMenu_service_1.ContextMenuService}]},ContextMenuAttachDirective.propDecorators={contextMenuSubject:[{type:core_1.Input}],contextMenu:[{type:core_1.Input}],onContextMenu:[{type:core_1.HostListener,args:["contextmenu",["$event"]]}]},ContextMenuAttachDirective}();return exports.ContextMenuAttachDirective=ContextMenuAttachDirective,module.exports}),System.registerDynamic("angular2-contextmenu/angular2-contextmenu",["./src/contextMenu.options","@angular/core","@angular/common","./src/contextMenu.component","./src/contextMenu.item.directive","./src/contextMenu.service","./src/contextMenu.attach.directive"],!0,function($__require,exports,module){"use strict";function __export(m){for(var p in m)exports.hasOwnProperty(p)||(exports[p]=m[p])}var contextMenu_options_1=$__require("./src/contextMenu.options"),core_1=$__require("@angular/core"),common_1=$__require("@angular/common"),contextMenu_component_1=$__require("./src/contextMenu.component"),contextMenu_item_directive_1=$__require("./src/contextMenu.item.directive"),contextMenu_service_1=$__require("./src/contextMenu.service"),contextMenu_attach_directive_1=$__require("./src/contextMenu.attach.directive");__export($__require("./src/contextMenu.component")),__export($__require("./src/contextMenu.service"));var ContextMenuModule=function(){function ContextMenuModule(){}return ContextMenuModule.forRoot=function(options){return{ngModule:ContextMenuModule,providers:[{provide:contextMenu_options_1.CONTEXT_MENU_OPTIONS,useValue:options}]}},ContextMenuModule.decorators=[{type:core_1.NgModule,args:[{declarations:[contextMenu_attach_directive_1.ContextMenuAttachDirective,contextMenu_component_1.ContextMenuComponent,contextMenu_item_directive_1.ContextMenuItemDirective],exports:[contextMenu_attach_directive_1.ContextMenuAttachDirective,contextMenu_component_1.ContextMenuComponent,contextMenu_item_directive_1.ContextMenuItemDirective],imports:[common_1.CommonModule],providers:[contextMenu_service_1.ContextMenuService]}]}],ContextMenuModule.ctorParameters=function(){return[]},ContextMenuModule}();return exports.ContextMenuModule=ContextMenuModule,Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=ContextMenuModule,module.exports});
//# sourceMappingURL=angular2-contextmenu.min.js.map